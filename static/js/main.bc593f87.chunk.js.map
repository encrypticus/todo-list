{"version":3,"sources":["components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/item-status-filter.js","components/item-status-filter/index.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/app.js","components/app/index.js","index.js"],"names":["TodoListItem","this","props","label","done","important","onDeleteItem","onToggleMarkDone","onToggleMarkImportant","classNames","className","onClick","type","React","Component","TodoList","renderListItems","listItems","map","listItem","index","id","listItemProps","key","AppHeader","countOf","filter","item","length","SearchPanel","onChangeValue","event","value","currentTarget","onSearchItem","trim","placeholder","onChange","filterButtons","name","ItemStatusFilter","button","renderButtons","ItemAddForm","state","domElement","createRef","setFocusInInput","current","focus","setState","onSubmit","preventDefault","onAddItem","ref","App","term","newListItems","splice","text","unshift","max","forEach","maxId","toggleProperty","propName","items","toLowerCase","includes","visibleItems","search","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc593f87.chunk.js","sourcesContent":["import TodoListItem from './todo-list-item';\nexport default TodoListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './todo-list-item.scss';\n\nexport default class TodoListItem extends React.Component {\n\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    done: PropTypes.bool.isRequired,\n    important: PropTypes.bool.isRequired,\n    onDeleteItem: PropTypes.func.isRequired,\n    onToggleMarkDone: PropTypes.func.isRequired,\n    onToggleMarkImportant: PropTypes.func.isRequired,\n  };\n\n  // onMarkDone = () => {\n  //   this.setState(({ done }) => {\n  //     return {\n  //       done: !done\n  //     };\n  //   });\n  // };\n\n  // onMarkImportant = () => {\n  //   this.setState(({ important }) => {\n  //     return {\n  //       important: !important\n  //     };\n  //   });\n  // };\n\n  render() {\n    const { label, done, important, onDeleteItem, onToggleMarkDone, onToggleMarkImportant } = this.props;\n\n    let classNames = 'todo-list-item';\n    if (done) {\n      classNames += ' todo-list-item_done';\n    }\n\n    if (important) {\n      classNames += ' todo-list-item_important';\n    }\n\n    return (\n      <span\n        className={classNames}>\n\n        <span\n          className=\"todo-list-item__label\"\n          onClick={onToggleMarkDone}>\n          {label}\n        </span>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-success btn-sm float-right\"\n          onClick={onToggleMarkImportant}>\n          <i className=\"fa fa-exclamation\"></i>\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-danger btn-sm float-right\"\n          onClick={onDeleteItem}>\n          <i className=\"fa fa-trash-o\"></i>\n        </button>\n      </span>\n    );\n  }\n}\n","import TodoList from './todo-list';\nexport default TodoList;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './todo-list.scss';\nimport TodoListItem from '../todo-list-item';\n\nexport default class TodoList extends Component {\n\n  static propTypes = {\n    listItems: PropTypes.array.isRequired,\n    onDeleteItem: PropTypes.func.isRequired,\n    onToggleMarkDone: PropTypes.func.isRequired,\n    onToggleMarkImportant: PropTypes.func.isRequired,\n  };\n\n  renderListItems = () => {\n    const { listItems, onDeleteItem, onToggleMarkDone, onToggleMarkImportant } = this.props;\n\n    const items = listItems.map((listItem, index) => {\n\n      const { id, ...listItemProps } = listItem;\n\n      return (\n        <li className='todo-list__item list-group-item' key={id}>\n          <TodoListItem\n            {...listItemProps}\n            onDeleteItem={() => onDeleteItem(index)}\n            onToggleMarkDone={() => onToggleMarkDone(index)}\n            onToggleMarkImportant={() => onToggleMarkImportant(index)}\n          />\n        </li>\n      );\n    });\n\n    return items;\n  };\n\n  render() {\n    return (\n      <ul className='todo-list list-group'>\n        {this.renderListItems()}\n      </ul>\n    );\n  }\n}\n","import AppHeader from './app-header';\nexport default AppHeader;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './app-header.scss';\n\nexport default class AppHeader extends Component {\n\n  static propTypes = {\n    listItems: PropTypes.array.isRequired\n  };\n\n  countOf = (key) => {\n    const { listItems } = this.props;\n\n    const sublistItems = listItems.filter((item) => item[key] === true);\n\n    return sublistItems.length;\n  };\n\n  render () {\n    this.countOf();\n    return (\n      <div className=\"app-header d-flex\">\n        <h1 >Todo List</h1>\n        <h2>\n          important {this.countOf('important')}, done {this.countOf('done')\n        }</h2>\n      </div>\n    );\n  }\n}\n","import SearchPanel from './search-panel';\nexport default SearchPanel;\n","import React from 'react';\nimport './search-panel.scss';\nimport PropTypes from 'prop-types';\n\nexport default class SearchPanel extends React.Component {\n\n  static propTypes = {\n    onSearchItem: PropTypes.func.isRequired,\n  };\n\n  onChangeValue = (event) => {\n    const { value } = event.currentTarget;\n    const { onSearchItem } = this.props;\n\n    onSearchItem(value.trim());\n  };\n\n  render() {\n    return (\n      <input\n        type=\"text\"\n        className=\"form-control search-input\"\n        placeholder=\"type to search\"\n        onChange={this.onChangeValue}\n      />\n    );\n  }\n}\n","import React from 'react';\n\nconst filterButtons = [\n  { name: 'all', label: 'All' },\n  { name: 'active', label: 'Active' },\n  { name: 'done', label: 'Done' }\n];\n\nexport default class ItemStatusFilter extends React.Component {\n\n  renderButtons() {\n    const buttons = filterButtons.map((button) => {\n      const { name, label } = button;\n      const classNames = 'btn btn-info';\n\n      return (\n        <button\n          key={name}\n          type=\"button\"\n          className={classNames}>\n          {label}\n        </button>\n      );\n    });\n\n    return buttons;\n  }\n\n  render() {\n    return (\n      <div className=\"btn-group\">\n        {this.renderButtons()}\n      </div>\n    );\n  }\n}\n","import ItemStatusFilter from './item-status-filter';\nexport  default ItemStatusFilter;","import ItemAddForm from './item-add-form';\nexport default ItemAddForm;\n","import React from 'react';\nimport './item-add-form.scss';\nimport PropTypes from 'prop-types';\n\nexport default class ItemAddForm extends React.Component {\n\n  static propTypes = {\n    onAddItem: PropTypes.func.isRequired\n  };\n\n  state = {\n    label: ''\n  };\n\n  domElement = React.createRef();\n\n  setFocusInInput = () => {\n    this.domElement.current.focus();\n  };\n\n  onChangeValue = (event) => {\n    let { value } = event.currentTarget;\n\n    this.setState({\n      label: value\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.setFocusInInput();\n\n    const { onAddItem } = this.props;\n    const { label } = this.state;\n\n    if (label.trim() !== '') {\n      onAddItem(label);\n    }\n\n    this.setState({\n      label: ''\n    });\n  };\n\n  componentDidMount() {\n    this.setFocusInInput();\n  }\n\n  render() {\n    const { label } = this.state;\n\n    return (\n      <form className=\"item-add-form d-flex\"\n            onSubmit={this.onSubmit}>\n        <input type=\"text\"\n               className=\"form-control\"\n               placeholder=\"Add task\"\n               onChange={this.onChangeValue}\n               value={label}\n               ref={this.domElement}/>\n\n        <button className=\"btn btn-primary\">\n          <span className=\"fa fa-plus\"></span>\n        </button>\n      </form>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport './app.scss';\nimport TodoList from '../todo-list';\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport ItemStatusFilter from '../item-status-filter';\nimport ItemAddForm from '../item-add-form';\n\nconst listItems = [\n  {\n    label: 'Drink Coffee',\n    important: true,\n    done: false,\n    id: 1\n  },\n  {\n    label: 'Drink whiskey',\n    important: false,\n    done: false,\n    id: 2\n  },\n  {\n    label: 'Drink shnaps',\n    important: false,\n    done: false,\n    id: 3\n  },\n  {\n    label: 'Drink milk',\n    important: false,\n    done: false,\n    id: 4\n  },\n  {\n    label: 'Drink tea',\n    important: true,\n    done: false,\n    id: 5\n  }\n];\n\nexport default class App extends Component {\n\n  state = {\n    listItems,\n    term: '',\n  };\n\n  onDeleteItem = (index) => {\n    let newListItems = [...this.state.listItems];\n\n    newListItems.splice(index, 1);\n    this.setState({\n      listItems: newListItems\n    });\n  };\n\n  onAddItem = (text) => {\n    let newListItems = [...this.state.listItems];\n\n    // const maxId = newListItems.reduce((prev, next) => prev.id > next.id ? prev.id : next.id, 1);\n\n    function maxId() {\n      let max = newListItems[0]['id'];\n\n      newListItems.forEach((item) => {\n        if (item['id'] > max) max = item['id'];\n      });\n\n      return max;\n    }\n\n    newListItems.unshift(\n      {\n        label: text,\n        important: false,\n        done: false,\n        id: newListItems.length ? maxId() + 1 : 1\n      }\n    );\n\n    this.setState({\n      listItems: newListItems\n    });\n  };\n\n  toggleProperty = (index, propName) => {\n    let newListItems = [...this.state.listItems];\n    newListItems[index][propName] = !newListItems[index][propName];\n\n    this.setState({\n      listItems: newListItems\n    });\n  };\n\n  onToggleMarkDone = (index) => {\n    this.toggleProperty(index, 'done');\n  };\n\n  onToggleMarkImportant = (index) => {\n    this.toggleProperty(index, 'important');\n  };\n\n  search(items, term) {\n    if (term.length === 0) return items;\n\n    return items.filter((item) => {\n      return item.label.toLowerCase().includes(term.toLowerCase())\n    });\n  }\n\n  onSearchItem = (term) => {\n    this.setState({\n      term\n    });\n  };\n\n  render() {\n    const { listItems, term } = this.state;\n    const visibleItems = this.search(listItems, term);\n\n    return (\n      <div className='app'>\n        <AppHeader listItems={listItems}/>\n\n        <ItemAddForm onAddItem={this.onAddItem}/>\n\n        <div className=\"search-panel d-flex\">\n          <SearchPanel onSearchItem={this.onSearchItem}/>\n          <ItemStatusFilter/>\n        </div>\n\n        <TodoList\n          listItems={visibleItems}\n          onDeleteItem={this.onDeleteItem}\n          onToggleMarkDone={this.onToggleMarkDone}\n          onToggleMarkImportant={this.onToggleMarkImportant}/>\n      </div>\n    );\n  }\n}\n","import App from './app';\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './index.scss';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}