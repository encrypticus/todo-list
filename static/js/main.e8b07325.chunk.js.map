{"version":3,"sources":["components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/item-status-filter.js","components/item-status-filter/index.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["TodoListItem","this","props","label","done","important","onDeleteItem","onToggleMarkDone","onToggleMarkImportant","classNames","className","onClick","type","React","Component","TodoList","renderListItems","listItems","map","listItem","index","id","listItemProps","key","AppHeader","countOf","filter","item","length","SearchPanel","onChangeValue","event","value","currentTarget","onSearchItem","trim","placeholder","onChange","filterButtons","name","ItemStatusFilter","renderButtons","onFilterItems","clazz","ItemAddForm","state","domElement","createRef","setFocusInInput","current","focus","setState","onSubmit","preventDefault","onAddItem","ref","App","term","newListItems","splice","saveStateInStorage","text","unshift","max","forEach","maxId","toggleProperty","propName","localStorage","setItem","JSON","stringify","items","toLowerCase","includes","storageList","getItem","parse","visibleItems","search","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8b07325.chunk.js","sourcesContent":["import TodoListItem from './todo-list-item';\nexport default TodoListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './todo-list-item.scss';\n\nexport default class TodoListItem extends React.Component {\n\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    done: PropTypes.bool.isRequired,\n    important: PropTypes.bool.isRequired,\n    onDeleteItem: PropTypes.func.isRequired,\n    onToggleMarkDone: PropTypes.func.isRequired,\n    onToggleMarkImportant: PropTypes.func.isRequired,\n  };\n\n  // onMarkDone = () => {\n  //   this.setState(({ done }) => {\n  //     return {\n  //       done: !done\n  //     };\n  //   });\n  // };\n\n  // onMarkImportant = () => {\n  //   this.setState(({ important }) => {\n  //     return {\n  //       important: !important\n  //     };\n  //   });\n  // };\n\n  render() {\n    const { label, done, important, onDeleteItem, onToggleMarkDone, onToggleMarkImportant } = this.props;\n\n    let classNames = 'todo-list-item';\n    if (done) {\n      classNames += ' todo-list-item_done';\n    }\n\n    if (important) {\n      classNames += ' todo-list-item_important';\n    }\n\n    return (\n      <span\n        className={classNames}>\n\n        <span\n          className=\"todo-list-item__label\"\n          onClick={onToggleMarkDone}>\n          {label}\n        </span>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-success btn-sm float-right\"\n          onClick={onToggleMarkImportant}>\n          <i className=\"fa fa-exclamation\"></i>\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-danger btn-sm float-right\"\n          onClick={onDeleteItem}>\n          <i className=\"fa fa-trash-o\"></i>\n        </button>\n      </span>\n    );\n  }\n}\n","import TodoList from './todo-list';\nexport default TodoList;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './todo-list.scss';\nimport TodoListItem from '../todo-list-item';\n\nexport default class TodoList extends Component {\n\n  static propTypes = {\n    listItems: PropTypes.array.isRequired,\n    onDeleteItem: PropTypes.func.isRequired,\n    onToggleMarkDone: PropTypes.func.isRequired,\n    onToggleMarkImportant: PropTypes.func.isRequired,\n  };\n\n  renderListItems = () => {\n    const { listItems, onDeleteItem, onToggleMarkDone, onToggleMarkImportant } = this.props;\n\n    const items = listItems.map((listItem, index) => {\n\n      const { id, ...listItemProps } = listItem;\n\n      return (\n        <li className='todo-list__item list-group-item' key={id}>\n          <TodoListItem\n            {...listItemProps}\n            onDeleteItem={() => onDeleteItem(index)}\n            onToggleMarkDone={() => onToggleMarkDone(index)}\n            onToggleMarkImportant={() => onToggleMarkImportant(index)}\n          />\n        </li>\n      );\n    });\n\n    return items;\n  };\n\n  render() {\n    return (\n      <ul className='todo-list list-group'>\n        {this.renderListItems()}\n      </ul>\n    );\n  }\n}\n","import AppHeader from './app-header';\nexport default AppHeader;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './app-header.scss';\n\nexport default class AppHeader extends Component {\n\n  static propTypes = {\n    listItems: PropTypes.array.isRequired\n  };\n\n  countOf = (key) => {\n    const { listItems } = this.props;\n\n    const sublistItems = listItems.filter((item) => item[key] === true);\n\n    return sublistItems.length;\n  };\n\n  render () {\n    this.countOf();\n    return (\n      <div className=\"app-header d-flex\">\n        <h1 >Список дел</h1>\n        <h2>\n          важные {this.countOf('important')}, выполненные {this.countOf('done')\n        }</h2>\n      </div>\n    );\n  }\n}\n","import SearchPanel from './search-panel';\nexport default SearchPanel;\n","import React from 'react';\nimport './search-panel.scss';\nimport PropTypes from 'prop-types';\n\nexport default class SearchPanel extends React.Component {\n\n  static propTypes = {\n    onSearchItem: PropTypes.func.isRequired,\n  };\n\n  onChangeValue = (event) => {\n    const { value } = event.currentTarget;\n    const { onSearchItem } = this.props;\n\n    onSearchItem(value.trim());\n  };\n\n  render() {\n    return (\n      <input\n        type=\"text\"\n        className=\"form-control search-input\"\n        placeholder=\"Найти\"\n        onChange={this.onChangeValue}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst filterButtons = [\n  { name: 'all', label: 'Все' },\n  { name: 'important', label: 'Важные' },\n  { name: 'done', label: 'Завершенные' }\n];\n\nexport default class ItemStatusFilter extends React.Component {\n\n  static propTypes = {\n    onFilterItems: PropTypes.func.isRequired,\n    filter: PropTypes.string.isRequired,\n  };\n\n  renderButtons = () => {\n    const { onFilterItems, filter } = this.props;\n\n    const buttons = filterButtons.map(({ name, label }) => {\n      const isActive = filter === name;\n      const clazz = isActive ? 'btn-info' : 'btn-outline-info';\n\n      return (\n        <button\n          key={name}\n          type=\"button\"\n          className={`btn ${clazz}`}\n          onClick={() => onFilterItems(name)}>\n          {label}\n        </button>\n      );\n    });\n\n    return buttons;\n  };\n\n  render() {\n    return (\n      <div className=\"btn-group\">\n        {this.renderButtons()}\n      </div>\n    );\n  }\n}\n","import ItemStatusFilter from './item-status-filter';\nexport  default ItemStatusFilter;","import ItemAddForm from './item-add-form';\nexport default ItemAddForm;\n","import React from 'react';\nimport './item-add-form.scss';\nimport PropTypes from 'prop-types';\n\nexport default class ItemAddForm extends React.Component {\n\n  static propTypes = {\n    onAddItem: PropTypes.func.isRequired\n  };\n\n  state = {\n    label: ''\n  };\n\n  domElement = React.createRef();\n\n  setFocusInInput = () => {\n    this.domElement.current.focus();\n  };\n\n  onChangeValue = (event) => {\n    let { value } = event.currentTarget;\n\n    this.setState({\n      label: value\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.setFocusInInput();\n\n    const { onAddItem } = this.props;\n    const { label } = this.state;\n\n    if (label.trim() !== '') {\n      onAddItem(label);\n    }\n\n    this.setState({\n      label: ''\n    });\n  };\n\n  componentDidMount() {\n    this.setFocusInInput();\n  }\n\n  render() {\n    const { label } = this.state;\n\n    return (\n      <form className=\"item-add-form d-flex\"\n            onSubmit={this.onSubmit}>\n        <input type=\"text\"\n               className=\"form-control\"\n               placeholder=\"Добавить задачу\"\n               onChange={this.onChangeValue}\n               value={label}\n               ref={this.domElement}/>\n\n        <button className=\"btn btn-primary\">\n          <span className=\"fa fa-plus\"></span>\n        </button>\n      </form>\n    );\n  }\n}\n","import App from './app';\nexport default App;\n","import React, {Component} from 'react';\nimport './app.scss';\nimport TodoList from '../todo-list';\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport ItemStatusFilter from '../item-status-filter';\nimport ItemAddForm from '../item-add-form';\n\n// const listItems = [\n//   {\n//     label: 'Drink Coffee',\n//     important: true,\n//     done: false,\n//     id: 1\n//   },\n//   {\n//     label: 'Drink whiskey',\n//     important: false,\n//     done: false,\n//     id: 2\n//   },\n//   {\n//     label: 'Drink shnaps',\n//     important: false,\n//     done: false,\n//     id: 3\n//   },\n//   {\n//     label: 'Drink milk',\n//     important: false,\n//     done: false,\n//     id: 4\n//   },\n//   {\n//     label: 'Drink tea',\n//     important: true,\n//     done: false,\n//     id: 5\n//   }\n// ];\n\nexport default class App extends Component {\n\n  state = {\n    listItems: [],\n    term: '',\n    filter: 'all',\n  };\n\n  saveStateInStorage(value) {\n    localStorage.setItem('listItems', JSON.stringify(value));\n  }\n\n  onDeleteItem = (index) => {\n    let newListItems = [...this.state.listItems];\n\n    newListItems.splice(index, 1);\n\n    this.setState({\n      listItems: newListItems\n    });\n\n    this.saveStateInStorage(newListItems);\n  };\n\n  onAddItem = (text) => {\n    let newListItems = [...this.state.listItems];\n\n    // const maxId = newListItems.reduce((prev, next) => prev.id > next.id ? prev.id : next.id, 1);\n\n    function maxId() {\n      let max = newListItems[0]['id'];\n\n      newListItems.forEach((item) => {\n        if (item['id'] > max) max = item['id'];\n      });\n\n      return max;\n    }\n\n    newListItems.unshift(\n      {\n        label: text,\n        important: false,\n        done: false,\n        id: newListItems.length ? maxId() + 1 : 1\n      }\n    );\n\n    this.setState({\n      listItems: newListItems\n    });\n\n    this.saveStateInStorage(newListItems);\n  };\n\n  toggleProperty = (index, propName) => {\n    let newListItems = [...this.state.listItems];\n    newListItems[index][propName] = !newListItems[index][propName];\n\n    this.setState({\n      listItems: newListItems\n    });\n\n    this.saveStateInStorage(newListItems);\n  };\n\n  onToggleMarkDone = (index) => {\n    this.toggleProperty(index, 'done');\n  };\n\n  onToggleMarkImportant = (index) => {\n    this.toggleProperty(index, 'important');\n  };\n\n  search(items, term) {\n    if (term.length === 0) return items;\n\n    return items.filter((item) => {\n      return item.label.toLowerCase().includes(term.toLowerCase())\n    });\n  }\n\n  filter(items, filter) {\n    switch (filter) {\n      case 'all':\n        return items;\n      case 'important':\n        return items.filter((item) => item.important);\n      case 'done':\n        return items.filter((item) => item.done);\n      default:\n        return items;\n    }\n  }\n\n  onSearchItem = (term) => {\n    this.setState({\n      term\n    });\n  };\n\n  onFilterItems = (filter) => {\n    this.setState({\n      filter\n    });\n  };\n\n\n  componentDidMount() {\n    let storageList = localStorage.getItem('listItems');\n    storageList = JSON.parse(storageList);\n\n    const listItems = storageList || [];\n\n    this.setState({\n      listItems,\n      term: '',\n    });\n  }\n\n  render() {\n    const { listItems, term, filter } = this.state;\n    const visibleItems = this.filter(this.search(listItems, term), filter);\n\n    return (\n      <div className='app'>\n        <AppHeader listItems={listItems}/>\n\n        <ItemAddForm onAddItem={this.onAddItem}/>\n\n        <div className=\"search-panel d-flex\">\n          <SearchPanel onSearchItem={this.onSearchItem}/>\n          <ItemStatusFilter\n            onFilterItems={this.onFilterItems}\n            filter={filter}/>\n        </div>\n\n        <TodoList\n          listItems={visibleItems}\n          onDeleteItem={this.onDeleteItem}\n          onToggleMarkDone={this.onToggleMarkDone}\n          onToggleMarkImportant={this.onToggleMarkImportant}/>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './index.scss';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}